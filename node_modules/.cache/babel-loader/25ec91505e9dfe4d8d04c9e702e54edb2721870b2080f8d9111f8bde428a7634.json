{"ast":null,"code":"var _jsxFileName = \"/Users/kavehdaneshvar/Desktop/Vibe codes/plasmidai/src/context/PlasmidContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlasmidContext = /*#__PURE__*/createContext();\nexport const usePlasmid = () => {\n  _s();\n  const context = useContext(PlasmidContext);\n  if (!context) {\n    throw new Error('usePlasmid must be used within a PlasmidProvider');\n  }\n  return context;\n};\n\n// Mock plasmid data\n_s(usePlasmid, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst mockPlasmids = [{\n  id: 1,\n  name: \"pMYC-001\",\n  description: \"High expression MYC vector with CMV promoter\",\n  sequence: \"ATGCCCCTCAACGTTAGCTTCACCAACAGGAACTATGACCTCGACTACGACTCGGTGCAGCCGTATTTCTCCTTCTTCCTCGACC\",\n  length: 5847,\n  features: [{\n    name: \"MYC\",\n    start: 1240,\n    end: 1572,\n    type: \"gene\",\n    color: \"#ff6b6b\"\n  }, {\n    name: \"CMV Promoter\",\n    start: 890,\n    end: 1190,\n    type: \"promoter\",\n    color: \"#4ecdc4\"\n  }, {\n    name: \"AmpR\",\n    start: 2100,\n    end: 2960,\n    type: \"resistance\",\n    color: \"#45b7d1\"\n  }],\n  tags: [\"MYC\", \"CMV\", \"High Expression\"],\n  company: \"BioTech Corp\"\n}, {\n  id: 2,\n  name: \"pMYC-FLAG-002\",\n  description: \"MYC with N-terminal FLAG tag\",\n  sequence: \"ATGGACTACAAAGACGATGACGACAAGCCCCTCAACGTTAGCTTCACCAACAGGAACTATGACCTCGACTACGACTCGGTGCAGCC\",\n  length: 5923,\n  features: [{\n    name: \"FLAG Tag\",\n    start: 1240,\n    end: 1264,\n    type: \"tag\",\n    color: \"#95e1d3\"\n  }, {\n    name: \"MYC\",\n    start: 1265,\n    end: 1597,\n    type: \"gene\",\n    color: \"#ff6b6b\"\n  }, {\n    name: \"CMV Promoter\",\n    start: 890,\n    end: 1190,\n    type: \"promoter\",\n    color: \"#4ecdc4\"\n  }, {\n    name: \"AmpR\",\n    start: 2150,\n    end: 3010,\n    type: \"resistance\",\n    color: \"#45b7d1\"\n  }],\n  tags: [\"MYC\", \"FLAG\", \"Tagged\"],\n  company: \"BioTech Corp\"\n}, {\n  id: 3,\n  name: \"pMYC-HIS-003\",\n  description: \"MYC with C-terminal His tag\",\n  sequence: \"ATGCCCCTCAACGTTAGCTTCACCAACAGGAACTATGACCTCGACTACGACTCGGTGCAGCCGCACCACCACCACCACCACTAG\",\n  length: 5901,\n  features: [{\n    name: \"MYC\",\n    start: 1240,\n    end: 1572,\n    type: \"gene\",\n    color: \"#ff6b6b\"\n  }, {\n    name: \"His Tag\",\n    start: 1573,\n    end: 1596,\n    type: \"tag\",\n    color: \"#ffeaa7\"\n  }, {\n    name: \"CMV Promoter\",\n    start: 890,\n    end: 1190,\n    type: \"promoter\",\n    color: \"#4ecdc4\"\n  }, {\n    name: \"AmpR\",\n    start: 2120,\n    end: 2980,\n    type: \"resistance\",\n    color: \"#45b7d1\"\n  }],\n  tags: [\"MYC\", \"His\", \"Purification\"],\n  company: \"BioTech Corp\"\n}];\nconst demoConversation = [{\n  type: 'user',\n  content: 'Do I have a plasmid that contains the gene MYC?'\n}, {\n  type: 'ai',\n  content: 'Yes, I found 3 plasmids in your inventory that contain the MYC gene. Let me show you the details:',\n  plasmids: [1, 2, 3],\n  showPlasmids: true\n}, {\n  type: 'user',\n  content: 'What is the difference between them?'\n}, {\n  type: 'ai',\n  content: 'Great question! Let me perform a sequence alignment to show you the key differences between these MYC plasmids:',\n  showAlignment: true,\n  alignmentData: {\n    sequences: [{\n      name: \"pMYC-001\",\n      seq: \"ATGCCCCTCAACGTTAGCTTCACCAACAGGAACTATGACCTCGACTACGACTCGGTGCAGCCGTATTTCTCCTTCTTCCTCGACC\"\n    }, {\n      name: \"pMYC-FLAG-002\",\n      seq: \"ATGGACTACAAAGACGATGACGACAAGCCCCTCAACGTTAGCTTCACCAACAGGAACTATGACCTCGACTACGACTCGGTGCAGCC\"\n    }, {\n      name: \"pMYC-HIS-003\",\n      seq: \"ATGCCCCTCAACGTTAGCTTCACCAACAGGAACTATGACCTCGACTACGACTCGGTGCAGCCGCACCACCACCACCACCACTAG\"\n    }],\n    differences: [\"pMYC-FLAG-002 has an N-terminal FLAG tag for detection\", \"pMYC-HIS-003 has a C-terminal His tag for purification\", \"pMYC-001 is the untagged wild-type version\"]\n  }\n}, {\n  type: 'user',\n  content: 'Can you help me design a new variation?'\n}, {\n  type: 'ai',\n  content: 'Absolutely! I\\'d be happy to help you create a new variation. What type of modification would you like to make to the MYC plasmid?'\n}, {\n  type: 'user',\n  content: 'I want to add a FLAG tag to it.'\n}, {\n  type: 'ai',\n  content: 'Excellent choice! FLAG tags are great for detection and purification. Let me ask - would you prefer the FLAG tag at the N-terminus or C-terminus?'\n}, {\n  type: 'user',\n  content: 'N-terminus please'\n}, {\n  type: 'ai',\n  content: 'Perfect! I\\'ve designed a new MYC plasmid with an N-terminal FLAG tag. Here\\'s your custom design:',\n  newDesign: {\n    name: \"pMYC-FLAG-Custom\",\n    sequence: \"ATGGACTACAAAGACGATGACGACAAGCCCCTCAACGTTAGCTTCACCAACAGGAACTATGACCTCGACTACGACTCGGTGCAGCCGTATTTCTCCTTCTTCCTCGACC\",\n    features: [{\n      name: \"FLAG Tag\",\n      start: 1,\n      end: 24,\n      type: \"tag\",\n      color: \"#95e1d3\"\n    }, {\n      name: \"MYC\",\n      start: 25,\n      end: 357,\n      type: \"gene\",\n      color: \"#ff6b6b\"\n    }],\n    description: \"Custom MYC with N-terminal FLAG tag for enhanced detection\"\n  },\n  showDesign: true\n}];\nexport const PlasmidProvider = ({\n  children\n}) => {\n  _s2();\n  const [plasmids] = useState(mockPlasmids);\n  const [selectedPlasmids, setSelectedPlasmids] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [showAlignment, setShowAlignment] = useState(false);\n  const [showNewDesign, setShowNewDesign] = useState(false);\n  const [newDesign, setNewDesign] = useState(null);\n  const [isWaitingForAnswer, setIsWaitingForAnswer] = useState(false);\n  const addMessage = message => {\n    setMessages(prev => [...prev, {\n      ...message,\n      id: Date.now()\n    }]);\n  };\n  const selectPlasmid = plasmidId => {\n    setSelectedPlasmids(prev => prev.includes(plasmidId) ? prev.filter(id => id !== plasmidId) : [...prev, plasmidId]);\n  };\n  const runDemoSequence = () => {\n    setMessages([]);\n    setCurrentStep(0);\n    setShowAlignment(false);\n    setShowNewDesign(false);\n    setSelectedPlasmids([]);\n    setNewDesign(null);\n    setIsWaitingForAnswer(false);\n  };\n  const advanceDemoStep = () => {\n    if (currentStep < demoConversation.length) {\n      const msg = demoConversation[currentStep];\n\n      // Add the message\n      setMessages(prev => [...prev, {\n        ...msg,\n        id: Date.now() + currentStep\n      }]);\n\n      // If this is a user message, set up auto-answer\n      if (msg.type === 'user' && currentStep + 1 < demoConversation.length) {\n        setIsWaitingForAnswer(true);\n        setCurrentStep(currentStep + 1);\n\n        // Auto-show the AI response after 2 seconds\n        setTimeout(() => {\n          const nextMsg = demoConversation[currentStep + 1];\n          if (nextMsg && nextMsg.type === 'ai') {\n            setMessages(prev => [...prev, {\n              ...nextMsg,\n              id: Date.now() + currentStep + 1\n            }]);\n\n            // Handle special actions for AI response - trigger visuals immediately\n            if (nextMsg.showPlasmids) {\n              setTimeout(() => setSelectedPlasmids(nextMsg.plasmids), 300);\n            }\n            if (nextMsg.showAlignment) {\n              setTimeout(() => setShowAlignment(true), 800);\n            }\n            if (nextMsg.showDesign) {\n              setNewDesign(nextMsg.newDesign);\n              setTimeout(() => setShowNewDesign(true), 800);\n            }\n            setCurrentStep(currentStep + 2);\n            setIsWaitingForAnswer(false);\n          }\n        }, 2000);\n      } else {\n        // For standalone AI messages (shouldn't happen in current demo flow)\n        setCurrentStep(currentStep + 1);\n      }\n    }\n  };\n  const value = {\n    plasmids,\n    selectedPlasmids,\n    messages,\n    currentStep,\n    showAlignment,\n    showNewDesign,\n    newDesign,\n    isWaitingForAnswer,\n    addMessage,\n    selectPlasmid,\n    setCurrentStep,\n    runDemoSequence,\n    advanceDemoStep,\n    demoConversation\n  };\n  return /*#__PURE__*/_jsxDEV(PlasmidContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s2(PlasmidProvider, \"UFJ6rTEZFwMra5zLI/+jaBVyXNY=\");\n_c = PlasmidProvider;\nvar _c;\n$RefreshReg$(_c, \"PlasmidProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","PlasmidContext","usePlasmid","_s","context","Error","mockPlasmids","id","name","description","sequence","length","features","start","end","type","color","tags","company","demoConversation","content","plasmids","showPlasmids","showAlignment","alignmentData","sequences","seq","differences","newDesign","showDesign","PlasmidProvider","children","_s2","selectedPlasmids","setSelectedPlasmids","messages","setMessages","currentStep","setCurrentStep","setShowAlignment","showNewDesign","setShowNewDesign","setNewDesign","isWaitingForAnswer","setIsWaitingForAnswer","addMessage","message","prev","Date","now","selectPlasmid","plasmidId","includes","filter","runDemoSequence","advanceDemoStep","msg","setTimeout","nextMsg","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kavehdaneshvar/Desktop/Vibe codes/plasmidai/src/context/PlasmidContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst PlasmidContext = createContext();\n\nexport const usePlasmid = () => {\n  const context = useContext(PlasmidContext);\n  if (!context) {\n    throw new Error('usePlasmid must be used within a PlasmidProvider');\n  }\n  return context;\n};\n\n// Mock plasmid data\nconst mockPlasmids = [\n  {\n    id: 1,\n    name: \"pMYC-001\",\n    description: \"High expression MYC vector with CMV promoter\",\n    sequence: \"ATGCCCCTCAACGTTAGCTTCACCAACAGGAACTATGACCTCGACTACGACTCGGTGCAGCCGTATTTCTCCTTCTTCCTCGACC\",\n    length: 5847,\n    features: [\n      { name: \"MYC\", start: 1240, end: 1572, type: \"gene\", color: \"#ff6b6b\" },\n      { name: \"CMV Promoter\", start: 890, end: 1190, type: \"promoter\", color: \"#4ecdc4\" },\n      { name: \"AmpR\", start: 2100, end: 2960, type: \"resistance\", color: \"#45b7d1\" },\n    ],\n    tags: [\"MYC\", \"CMV\", \"High Expression\"],\n    company: \"BioTech Corp\"\n  },\n  {\n    id: 2,\n    name: \"pMYC-FLAG-002\",\n    description: \"MYC with N-terminal FLAG tag\",\n    sequence: \"ATGGACTACAAAGACGATGACGACAAGCCCCTCAACGTTAGCTTCACCAACAGGAACTATGACCTCGACTACGACTCGGTGCAGCC\",\n    length: 5923,\n    features: [\n      { name: \"FLAG Tag\", start: 1240, end: 1264, type: \"tag\", color: \"#95e1d3\" },\n      { name: \"MYC\", start: 1265, end: 1597, type: \"gene\", color: \"#ff6b6b\" },\n      { name: \"CMV Promoter\", start: 890, end: 1190, type: \"promoter\", color: \"#4ecdc4\" },\n      { name: \"AmpR\", start: 2150, end: 3010, type: \"resistance\", color: \"#45b7d1\" },\n    ],\n    tags: [\"MYC\", \"FLAG\", \"Tagged\"],\n    company: \"BioTech Corp\"\n  },\n  {\n    id: 3,\n    name: \"pMYC-HIS-003\",\n    description: \"MYC with C-terminal His tag\",\n    sequence: \"ATGCCCCTCAACGTTAGCTTCACCAACAGGAACTATGACCTCGACTACGACTCGGTGCAGCCGCACCACCACCACCACCACTAG\",\n    length: 5901,\n    features: [\n      { name: \"MYC\", start: 1240, end: 1572, type: \"gene\", color: \"#ff6b6b\" },\n      { name: \"His Tag\", start: 1573, end: 1596, type: \"tag\", color: \"#ffeaa7\" },\n      { name: \"CMV Promoter\", start: 890, end: 1190, type: \"promoter\", color: \"#4ecdc4\" },\n      { name: \"AmpR\", start: 2120, end: 2980, type: \"resistance\", color: \"#45b7d1\" },\n    ],\n    tags: [\"MYC\", \"His\", \"Purification\"],\n    company: \"BioTech Corp\"\n  }\n];\n\nconst demoConversation = [\n  { type: 'user', content: 'Do I have a plasmid that contains the gene MYC?' },\n  { \n    type: 'ai', \n    content: 'Yes, I found 3 plasmids in your inventory that contain the MYC gene. Let me show you the details:', \n    plasmids: [1, 2, 3],\n    showPlasmids: true\n  },\n  { type: 'user', content: 'What is the difference between them?' },\n  { \n    type: 'ai', \n    content: 'Great question! Let me perform a sequence alignment to show you the key differences between these MYC plasmids:', \n    showAlignment: true,\n    alignmentData: {\n      sequences: [\n        { name: \"pMYC-001\", seq: \"ATGCCCCTCAACGTTAGCTTCACCAACAGGAACTATGACCTCGACTACGACTCGGTGCAGCCGTATTTCTCCTTCTTCCTCGACC\" },\n        { name: \"pMYC-FLAG-002\", seq: \"ATGGACTACAAAGACGATGACGACAAGCCCCTCAACGTTAGCTTCACCAACAGGAACTATGACCTCGACTACGACTCGGTGCAGCC\" },\n        { name: \"pMYC-HIS-003\", seq: \"ATGCCCCTCAACGTTAGCTTCACCAACAGGAACTATGACCTCGACTACGACTCGGTGCAGCCGCACCACCACCACCACCACTAG\" }\n      ],\n      differences: [\n        \"pMYC-FLAG-002 has an N-terminal FLAG tag for detection\",\n        \"pMYC-HIS-003 has a C-terminal His tag for purification\",\n        \"pMYC-001 is the untagged wild-type version\"\n      ]\n    }\n  },\n  { type: 'user', content: 'Can you help me design a new variation?' },\n  { type: 'ai', content: 'Absolutely! I\\'d be happy to help you create a new variation. What type of modification would you like to make to the MYC plasmid?' },\n  { type: 'user', content: 'I want to add a FLAG tag to it.' },\n  { type: 'ai', content: 'Excellent choice! FLAG tags are great for detection and purification. Let me ask - would you prefer the FLAG tag at the N-terminus or C-terminus?' },\n  { type: 'user', content: 'N-terminus please' },\n  { \n    type: 'ai', \n    content: 'Perfect! I\\'ve designed a new MYC plasmid with an N-terminal FLAG tag. Here\\'s your custom design:', \n    newDesign: {\n      name: \"pMYC-FLAG-Custom\",\n      sequence: \"ATGGACTACAAAGACGATGACGACAAGCCCCTCAACGTTAGCTTCACCAACAGGAACTATGACCTCGACTACGACTCGGTGCAGCCGTATTTCTCCTTCTTCCTCGACC\",\n      features: [\n        { name: \"FLAG Tag\", start: 1, end: 24, type: \"tag\", color: \"#95e1d3\" },\n        { name: \"MYC\", start: 25, end: 357, type: \"gene\", color: \"#ff6b6b\" }\n      ],\n      description: \"Custom MYC with N-terminal FLAG tag for enhanced detection\"\n    },\n    showDesign: true\n  }\n];\n\nexport const PlasmidProvider = ({ children }) => {\n  const [plasmids] = useState(mockPlasmids);\n  const [selectedPlasmids, setSelectedPlasmids] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [showAlignment, setShowAlignment] = useState(false);\n  const [showNewDesign, setShowNewDesign] = useState(false);\n  const [newDesign, setNewDesign] = useState(null);\n  const [isWaitingForAnswer, setIsWaitingForAnswer] = useState(false);\n\n  const addMessage = (message) => {\n    setMessages(prev => [...prev, { ...message, id: Date.now() }]);\n  };\n\n  const selectPlasmid = (plasmidId) => {\n    setSelectedPlasmids(prev => \n      prev.includes(plasmidId) \n        ? prev.filter(id => id !== plasmidId)\n        : [...prev, plasmidId]\n    );\n  };\n\n  const runDemoSequence = () => {\n    setMessages([]);\n    setCurrentStep(0);\n    setShowAlignment(false);\n    setShowNewDesign(false);\n    setSelectedPlasmids([]);\n    setNewDesign(null);\n    setIsWaitingForAnswer(false);\n  };\n\n  const advanceDemoStep = () => {\n    if (currentStep < demoConversation.length) {\n      const msg = demoConversation[currentStep];\n      \n      // Add the message\n      setMessages(prev => [...prev, { ...msg, id: Date.now() + currentStep }]);\n      \n      // If this is a user message, set up auto-answer\n      if (msg.type === 'user' && currentStep + 1 < demoConversation.length) {\n        setIsWaitingForAnswer(true);\n        setCurrentStep(currentStep + 1);\n        \n        // Auto-show the AI response after 2 seconds\n        setTimeout(() => {\n          const nextMsg = demoConversation[currentStep + 1];\n          if (nextMsg && nextMsg.type === 'ai') {\n            setMessages(prev => [...prev, { ...nextMsg, id: Date.now() + currentStep + 1 }]);\n            \n            // Handle special actions for AI response - trigger visuals immediately\n            if (nextMsg.showPlasmids) {\n              setTimeout(() => setSelectedPlasmids(nextMsg.plasmids), 300);\n            }\n            if (nextMsg.showAlignment) {\n              setTimeout(() => setShowAlignment(true), 800);\n            }\n            if (nextMsg.showDesign) {\n              setNewDesign(nextMsg.newDesign);\n              setTimeout(() => setShowNewDesign(true), 800);\n            }\n            \n            setCurrentStep(currentStep + 2);\n            setIsWaitingForAnswer(false);\n          }\n        }, 2000);\n      } else {\n        // For standalone AI messages (shouldn't happen in current demo flow)\n        setCurrentStep(currentStep + 1);\n      }\n    }\n  };\n\n  const value = {\n    plasmids,\n    selectedPlasmids,\n    messages,\n    currentStep,\n    showAlignment,\n    showNewDesign,\n    newDesign,\n    isWaitingForAnswer,\n    addMessage,\n    selectPlasmid,\n    setCurrentStep,\n    runDemoSequence,\n    advanceDemoStep,\n    demoConversation\n  };\n\n  return (\n    <PlasmidContext.Provider value={value}>\n      {children}\n    </PlasmidContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}